#原文链接：http://www.jinbuguo.com/systemd/systemd-system.conf.html
描述
当作为系统实例运行时，systemd将会按照system.conf配置文件以及system.conf.d配置目录中的指令工作；
当作为用户实例运行时，systemd将会按照user.conf配置文件以及user.conf.d配置目录中的指令工作。
这些配置文件包含了控制systemd行为的设置。

配置目录及其优先级
默认设置是在编译期间确定的，所以仅在确实需要修改默认设置的情况下，才需要使用配置文件。
位于/etc/systemd/目录中的初始配置文件，仅包含了展示选项默认值的注释，目的在于方便系统管理员查看和直接修改。
如果软件包想要自定义某些默认设置，那么必须将自定义的配置文件安装到/usr/lib/systemd/*.conf.d/目录中。
/etc/目录仅供系统管理员使用。系统管理员可以利用下面的逻辑来覆盖默认设置：主配置文件最先被读取，优先级也最低。
所有*.conf.d/中的配置文件都会覆盖主配置文件中的设置。所有*.conf.d/中的配置文件(无论位于哪个目录中)，统一按照文件名的字典顺序处理。
当多个配置文件都设置了同一个选项的时候：
(1)如果该选项仅接受一个单一值，那么仅以文件名最靠后(字典顺序)的那一个为准；
(2)如果该选项可接受一个值列表，那么将会按照文件名的字典顺序将所有值列表拼接起来。为了便于排序，建议给所有*.conf.d/中的配置文件
都加上两位十进制数字的文件名前缀。如果系统管理员想要屏蔽/usr/lib/目录中的某个配置文件，
那么最佳做法是在/etc/目录中创建一个指向/dev/null的同名符号链接，即可彻底屏蔽/usr/lib/目录中的同名文件。

选项
所有选项都位于"[Manager]"小节中

CtrlAltDelBurstAction=
当用户在2秒内连续超过7次按Ctrl-Alt-Delete组合键时，应该执行什么操作。
可以设为下列值之一："reboot-force","poweroff-force","reboot-immediate","poweroff-immediate","none"(什么也不做)。
默认值"reboot-force"表示强制重启。

CPUAffinity=
设置init进程的初始CPU亲和性。值是一个空格或逗号分隔的CPU编号与CPU范围的列表。
所谓"CPU范围"是指用CPU编号表示的一段范围内的CPU，格式是"编号下限-编号上限"。

JoinControllers=cpu,cpuacctnet_cls,netprio
systemd默认将所有内核中的控制器分别挂载到各自独有的层级上，但是在该选项中列出的控制器则会被挂载到同一个层级上。
选项值是一个空格分隔的列表，列表中的每一项则又是一个逗号分隔的控制器名称列表，以允许将多个层级连接在一起。
该选项的默认值是"cpu,cpuacct"。若设为空，则可确保systemd将所有控制器挂载到各自独立的层级上。
注意，此选项仅在系统启动的早期应用一次。因此，如果你在initrd中使用了systemd，那么若要修改此选项，则必须在修改完配置文件之后，重新生成initrd。

RuntimeWatchdogSec=,ShutdownWatchdogSec=
分别配置硬件看门狗的运行时超时阈值与重启超时阈值。若仅设置一个整数而没有单位，那么单位是秒。
同时也可以在整数后面加上时间单位后缀："ms"(毫秒),"s"(秒),"min"(分钟),"h"(小时),"d"(天),"w"(周)。
如果将RuntimeWatchdogSec=设为非零值，那么systemd会尽力以该值的一半时长为间隔不断喂狗，
当看门狗硬件(/dev/watchdog)的饥饿时间超过该选项设置的阈值时，看门狗硬件将会重启系统。
某些看门狗硬件不支持随意设置这个值，在这种情况下，将会自动使用最接近的有效阈值。
ShutdownWatchdogSec=可用于设置重启超时阈值。
其含义是，当systemd在正常重启过程中遭遇故障，无法在ShutdownWatchdogSec=规定的时间内完成重启时，将由看门狗硬件强制重启整个机器。
RuntimeWatchdogSec=的默认值是"0"(关闭看门狗)；而ShutdownWatchdogSec=的默认值是10min(10分钟)。
这些设置仅在确实存在看门狗硬件(它们通常都集成在服务器主板上)时有意义，否则没有任何作用。

CapabilityBoundingSet=
设置systemd(PID=1)及其子进程的capabilities集合(bounding,effective,permitted,inheritable)中应该包含哪些capabilities。
选项值是一个空格分隔的、可被cap_from_name(3)读取的capability名称列表，详见capabilities(7)手册。
列表中的capabilities将会被包含在capability集合中，而所有其他不在列表中的capabilities则会被剔除。
如果列表以"~"符号开头，那么表示取反，也就是所有列表之外的capabilities将会被包含在capability集合中。
也可以在每个单元文件中，使用这个选项针对每个单元文件单独设置专用于该单元的capability集合。
但是，那些已经被systemd(PID=1)排除的capabilities是永久性的排除，也就是无法再被加入到单元的capability集合中去。

SystemCallArchitectures=
设置可使用哪些体系结构的系统调用，选项值是一个空格分隔的体系结构标识符列表。
可以使用的标识符有："x86","x86-64","x32","arm","native"(编译systemd时的目标架构)。该选项的默认值为空，表示不作任何限制。
该选项可用于在全系统范围内强制仅允许执行特定体系结构的二进制程序。比如禁止在x86-64机器上执行32位的x86二进制程序。
当某个二进制程序企图执行列表范围之外的系统调用时，它将会立即被SIGSYS信号杀死。
该选项在全系统范围有效，相当于单元文件中的SystemCallArchitectures=选项(参见systemd.exec(5))的全局版本。

TimerSlackNSec=
设置systemd(PID=1)的定时器粒度。若仅设置一个整数而没有单位，那么单位是纳秒。
也可以在整数后面加上时间单位后缀："ns"(纳秒),"us"(微秒),"ms"(毫秒),"s"(秒),"min"(分钟),"h"(小时),"d"(天),"w"(周)。
该值会被所有子进程继承，但可以被单元文件中的TimerSlackNSec=选项(参见systemd.exec(5))针对特定单元改写。
定时器的粒度大小控制着进程被操作系统定时器唤醒的时间精度，详见prctl(2)手册。

DefaultTimerAccuracySec=
设置定时器单元的默认精度，也就是timer单元文件中AccuracySec=选项的默认值(参见systemd.timer(5))。
默认值是1min(1分钟)。在timer单元文件中明确设置的AccuracySec=值会覆盖此处的设置。
若仅设置一个整数而没有单位，那么单位是秒。
也可以在整数后面加上时间单位后缀："ms"(毫秒),"s"(秒),"min"(分钟),"h"(小时),"d"(天),"w"(周)。
注意，实际能够达到的精度受TimerSlackNSec=选项的制约(可以理解为最小时间片)。

DefaultTimeoutStartSec=,DefaultTimeoutStopSec=,DefaultRestartSec=
设置启动/停止一个单元所允许的最大时长，以及在重启一个单元时，停止与启动之间的间隔时长。
若仅设置一个整数而没有单位，那么单位是秒。也可以在整数后面加上时间单位后缀："ms"(毫秒),"s"(秒),"min"(分钟),"h"(小时),"d"(天),"w"(周)。
DefaultTimeoutStartSec=与DefaultTimeoutStopSec=的默认值都是90s，而DefaultRestartSec=的默认值是100ms。
对于service单元，可以在单元文件中设置TimeoutStartSec=,TimeoutStopSec=,RestartSec=以覆盖此处设置的默认值(参见systemd.service(5))。
对于其他类型的单元，DefaultTimeoutStartSec=是TimeoutSec=的默认值。

DefaultStartLimitIntervalSec=,DefaultStartLimitBurst=
设置默认的单元启动频率限制，相当于设置单元文件中StartLimitIntervalSec=,StartLimitBurst=的默认值(参见systemd.service(5))。
默认值如下：DefaultStartLimitIntervalSec=10s,DefaultStartLimitBurst=5
DefaultEnvironment=
设置需要传递给所有子进程的环境变量，值是一个空格分隔的VAR=VALUE列表。参见environ(7)手册。
例如：
DefaultEnvironment="VAR1=word1word2"VAR2=word3"VAR3=word56"
设置了"VAR1","VAR2","VAR3"三个变量，其值分别是"word1word2","word3","word56"。

DefaultCPUAccounting=,DefaultBlockIOAccounting=,DefaultMemoryAccounting=,DefaultTasksAccounting=,DefaultIPAccounting=
设置每个单元默认的资源统计开关。相当于分别设置单元文件中
CPUAccounting=,BlockIOAccounting=,MemoryAccounting=,TasksAccounting=,IPAccounting=的默认值(参见systemd.resource-control(5))。
只有DefaultTasksAccounting=的默认值是"yes"，其他默认值都是"no"。

DefaultTasksMax=
设置每个单元默认的最大任务数量，相当于设置每个单元的TasksMax=默认值(参见systemd.resource-control(5))。
作用于所有支持资源限制的单元类型(但slice单元除外)。
默认值是15%，对于默认设置的内核来说，在主机上等于4915，但在容器中的值可能会更小。

DefaultLimitCPU=,DefaultLimitFSIZE=,DefaultLimitDATA=,DefaultLimitSTACK=,DefaultLimitCORE=,DefaultLimitRSS=,DefaultLimitNOFILE=,DefaultLimitAS=,DefaultLimitNPROC=,DefaultLimitMEMLOCK=,DefaultLimitLOCKS=,DefaultLimitSIGPENDING=,DefaultLimitMSGQUEUE=,DefaultLimitNICE=,DefaultLimitRTPRIO=,DefaultLimitRTTIME=
设置默认的单元资源限制(详见setrlimit(2))。
相当于设置单元文件中LimitXXX=指令的默认值。这些指令的值有两种表示法，一个单独的value值表示将软硬两种限制设为同一个值。
而冒号分隔的soft:hard值表示分别设置软限制与硬限制(例如DefaultLimitAS=4G:16G)。特殊值infinity表示没有限制。
对于以字节为单位的选项，可以使用以1024为基数的K,M,G,T,P,E后缀(例如DefaultLimitAS=16G)。
对于时间限制，可以加上"ms"(毫秒),"s"(秒),"min"(分钟),"h"(小时),"d"(天),"w"(周)等明确的时间单位后缀(systemd.time(7))。
如果仅设置了一个整数而没有单位，那么对于DefaultLimitCPU=来说默认单位是秒。而对于DefaultLimitRTTIME=来说默认单位是微秒(百万分之一秒)。
注意，这些资源限制值的实际效果可能会受到各自有效粒度的影响。例如DefaultLimitCPU=所设置的时间会被向上取整到一秒钟的整数倍。
这些默认设置可以被单元文件中对应的LimitXXX=指令覆盖。注意，这里的资源限制仅作用于单元，并不作用于systemd(PID=1)进程自身。
